apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o relay-saervices.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: db
    name: db
  spec:
    ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
    selector:
      io.kompose.service: db
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o relay-saervices.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: ganache
    name: ganache
  spec:
    ports:
    - name: "8545"
      port: 8545
      targetPort: 8545
    selector:
      io.kompose.service: ganache
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o relay-saervices.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: nginx
    name: nginx
  spec:
    ports:
    - name: "8000"
      port: 8000
      targetPort: 8000
    selector:
      io.kompose.service: nginx
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o relay-saervices.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: redis
    name: redis
  spec:
    ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
    selector:
      io.kompose.service: redis
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o relay-saervices.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: scheduler
    name: scheduler
  spec:
    clusterIP: None
    ports:
    - name: headless
      port: 55555
      targetPort: 0
    selector:
      io.kompose.service: scheduler
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o relay-saervices.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: web
    name: web
  spec:
    ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
    selector:
      io.kompose.service: web
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o relay-saervices.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: worker
    name: worker
  spec:
    clusterIP: None
    ports:
    - name: headless
      port: 55555
      targetPort: 0
    selector:
      io.kompose.service: worker
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o relay-saervices.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: db
    name: db
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: db
      spec:
        containers:
        - image: postgres:10-alpine
          name: db
          ports:
          - containerPort: 5432
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o relay-saervices.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: ganache
    name: ganache
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: ganache
      spec:
        containers:
        - image: ganache:latest
          name: ganache
          ports:
          - containerPort: 8545
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o relay-saervices.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: nginx
    name: nginx
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: nginx
      spec:
        containers:
        - image: nginx:1.13-alpine
          name: nginx
          ports:
          - containerPort: 8000
          resources: {}
          volumeMounts:
          - mountPath: /etc/nginx/conf.d
            name: nginx-claim0
          - mountPath: /nginx
            name: nginx-shared
        restartPolicy: Always
        volumes:
        - name: nginx-claim0
          persistentVolumeClaim:
            claimName: nginx-claim0
        - name: nginx-shared
          persistentVolumeClaim:
            claimName: nginx-shared
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: nginx-claim0
    name: nginx-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: nginx-shared
    name: nginx-shared
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o relay-saervices.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: redis
    name: redis
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: redis
      spec:
        containers:
        - image: redis:4-alpine
          name: redis
          ports:
          - containerPort: 6379
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o relay-saervices.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: scheduler
    name: scheduler
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: scheduler
      spec:
        containers:
        - args:
          - docker/web/celery/scheduler/run.sh
          env:
          - name: CELERY_BROKER_URL
            value: redis://redis/0
          - name: C_FORCE_ROOT
            value: "true"
          - name: DATABASE_URL
            value: psql://postgres@db:5432/postgres
          - name: DEBUG
            value: "0"
          - name: DJANGO_SECRET_KEY
            value: test-secret#-!key
          - name: DJANGO_SETTINGS_MODULE
            value: config.settings.local
          - name: ETHEREUM_NODE_URL
            value: http://ganache:8545
          - name: PYTHONPATH
            value: /app/safe_relay_service
          - name: REDIS_URL
            value: redis://redis/0
          - name: SAFE_FUNDER_PRIVATE_KEY
            value: 4f3edf983ac636a65a842ce7c78d9aa706d3b113bce9c46f30d7d21715b23b1d
          - name: SAFE_PERSONAL_CONTRACT_ADDRESS
            value: 0xEc7C75C1548765AB51A165873b0B1b71663c1266
          - name: SAFE_TX_SENDER_PRIVATE_KEY
            value: 6cbed15c793ce57650b9877cf6fa156fbef513c4e6134f022a85b1ffdd59b2a1
          - name: USE_DOCKER
            value: "True"
          image: scheduler
          name: scheduler
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o relay-saervices.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: web
    name: web
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: web
      spec:
        containers:
        - args:
          - docker/web/run_web.sh
          env:
          - name: CELERY_BROKER_URL
            value: redis://redis/0
          - name: C_FORCE_ROOT
            value: "true"
          - name: DATABASE_URL
            value: psql://postgres@db:5432/postgres
          - name: DEBUG
            value: "0"
          - name: DJANGO_SECRET_KEY
            value: test-secret#-!key
          - name: DJANGO_SETTINGS_MODULE
            value: config.settings.local
          - name: ETHEREUM_NODE_URL
            value: http://ganache:8545
          - name: PYTHONPATH
            value: /app/safe_relay_service
          - name: REDIS_URL
            value: redis://redis/0
          - name: SAFE_FUNDER_PRIVATE_KEY
            value: 4f3edf983ac636a65a842ce7c78d9aa706d3b113bce9c46f30d7d21715b23b1d
          - name: SAFE_PERSONAL_CONTRACT_ADDRESS
            value: 0xEc7C75C1548765AB51A165873b0B1b71663c1266
          - name: SAFE_TX_SENDER_PRIVATE_KEY
            value: 6cbed15c793ce57650b9877cf6fa156fbef513c4e6134f022a85b1ffdd59b2a1
          - name: USE_DOCKER
            value: "True"
          image: web
          name: web
          ports:
          - containerPort: 27017
          resources: {}
          volumeMounts:
          - mountPath: /nginx
            name: nginx-shared
          workingDir: /app
        restartPolicy: Always
        volumes:
        - name: nginx-shared
          persistentVolumeClaim:
            claimName: nginx-shared
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: nginx-shared
    name: nginx-shared
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o relay-saervices.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: worker
    name: worker
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: worker
      spec:
        containers:
        - args:
          - docker/web/celery/worker/run.sh
          env:
          - name: CELERY_BROKER_URL
            value: redis://redis/0
          - name: C_FORCE_ROOT
            value: "true"
          - name: DATABASE_URL
            value: psql://postgres@db:5432/postgres
          - name: DEBUG
            value: "0"
          - name: DJANGO_SECRET_KEY
            value: test-secret#-!key
          - name: DJANGO_SETTINGS_MODULE
            value: config.settings.local
          - name: ETHEREUM_NODE_URL
            value: http://ganache:8545
          - name: PYTHONPATH
            value: /app/safe_relay_service
          - name: REDIS_URL
            value: redis://redis/0
          - name: SAFE_FUNDER_PRIVATE_KEY
            value: 4f3edf983ac636a65a842ce7c78d9aa706d3b113bce9c46f30d7d21715b23b1d
          - name: SAFE_PERSONAL_CONTRACT_ADDRESS
            value: 0xEc7C75C1548765AB51A165873b0B1b71663c1266
          - name: SAFE_TX_SENDER_PRIVATE_KEY
            value: 6cbed15c793ce57650b9877cf6fa156fbef513c4e6134f022a85b1ffdd59b2a1
          - name: USE_DOCKER
            value: "True"
          image: worker
          name: worker
          resources: {}
        restartPolicy: Always
  status: {}
kind: List
metadata: {}

